import os
import httpx
from fastapi import FastAPI, Request, HTTPException

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set")

TELEGRAM_API = f"https://api.telegram.org/bot{BOT_TOKEN}"
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET", "secret123")

app = FastAPI()

async def handle_update(update: dict):
    message = update.get("message") or update.get("edited_message")
    if not message:
        return
    chat_id = message["chat"]["id"]
    text = message.get("text", "")

    if text.startswith("/start"):
        reply = ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–≤–µ—Å—Ç! üé≠\n\n"
                 "–¢—ã —É –≤—Ö–æ–¥–∞ –≤ —Å—Ç–∞—Ä—É—é —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—é.\n"
                 "–í–æ–ø—Ä–æ—Å 1: –∫—Ç–æ —Å–æ–∑–¥–∞–ª –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π —à—Ä–∏—Ñ—Ç?")
    elif "–ø–µ—Ç—Ä" in text.lower() or "–ø—ë—Ç—Ä" in text.lower():
        reply = ("–í–µ—Ä–Ω–æ! –≠—Ç–∞–ø 2: —Ä–∞—Å—à–∏—Ñ—Ä—É–π 26-15-20-1 (A=1).")
    elif text.strip().upper() == "ZOTA":
        reply = ("–û—Ç–ª–∏—á–Ω–æ! –≠—Ç–∞–ø 3: –°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—Ö–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ –≤ ____ –ø–µ—á–∞—Ç–∏.\n"
                 "–ü–æ–¥—Å–∫–∞–∑–∫–∞: C,M,Y,K –ø–µ—á–∞—Ç–∞—é—Ç —Ä–∞–∑–¥–µ–ª—å–Ω–æ.")
    elif "–ø–æ—Ü–≤–µ—Ç" in text.lower():
        reply = ("–§–∏–Ω–∞–ª üéâ –¢—ã –ø—Ä–æ—à—ë–ª –∫–≤–µ—Å—Ç! –°–ª–æ–≤–æ ‚Äî –æ—Ä—É–∂–∏–µ.")
    else:
        reply = ("–ù–µ –ø–æ–Ω—è–ª. –ü–æ–ø—Ä–æ–±—É–π /start –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø.")

    async with httpx.AsyncClient(timeout=10) as client:
        await client.post(f"{TELEGRAM_API}/sendMessage",
                          json={"chat_id": chat_id, "text": reply})

@app.get("/")
def ok():
    return {"status": "ok"}

@app.post(f"/webhook/{WEBHOOK_SECRET}")
async def telegram_webhook(request: Request):
    try:
        update = await request.json()
    except Exception:
        raise HTTPException(status_code=400, detail="invalid json")
    await handle_update(update)
    return {"ok": True}
