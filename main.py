

import os
import json
import random
import unicodedata
import httpx
from dataclasses import dataclass, field, asdict
from typing import Dict, List, Optional

from fastapi import FastAPI, Request, HTTPException

# === ENV ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET", "secret123")
WEBHOOK_BASE = os.getenv("WEBHOOK_BASE", "")  # e.g. https://your-service.onrender.com
TG = f"https://api.telegram.org/bot{BOT_TOKEN}"

# === FASTAPI ===
app = FastAPI()

# === UTILS ===
def norm(s: str) -> str:
    s = unicodedata.normalize("NFKC", (s or "")).strip().lower()
    s = s.replace("—ë", "–µ")
    return s

async def tg(method: str, payload: dict):
    async with httpx.AsyncClient(timeout=20) as cl:
        r = await cl.post(f"{TG}/{method}", json=payload)
        r.raise_for_status()
        return r.json()

def kb(rows: List[List[Dict[str, str]]]) -> dict:
    # rows: [[{"text":"...", "data":"..."}], ...]
    return {"inline_keyboard": [[{"text":b["text"], "callback_data":b["data"]} for b in row] for row in rows]}

def hp_bar(cur: int, mx: int, width: int = 10) -> str:
    cur = max(0, min(cur, mx))
    filled = int(round(width * (cur / mx if mx else 0)))
    return "‚ñà" * filled + "‚ñë" * (width - filled)

async def send_text(chat_id: int, text: str, markup: Optional[dict] = None):
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "Markdown"}
    if markup:
        payload["reply_markup"] = markup
    await tg("sendMessage", payload)

async def send_photo(chat_id: int, url: str, caption: str, markup: Optional[dict] = None):
    payload = {"chat_id": chat_id, "photo": url, "caption": caption, "parse_mode": "Markdown"}
    if markup:
        payload["reply_markup"] = markup
    try:
        await tg("sendPhoto", payload)
    except Exception:
        await send_text(chat_id, caption, markup)

# === IMAGES (–∑–∞–º–µ–Ω–∏—à—å —Å–≤–æ–∏ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏) ===
IMG = {
    "village": "https://images.unsplash.com/photo-1533105079780-92b9be482077",
    "forest_trail": "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee",
    "rune_sun": "https://images.unsplash.com/photo-1617191519009-8f6a0c2e6c7f",
    "leshy": "https://images.unsplash.com/photo-1509043759401-136742328bb3",
    "herbs": "https://images.unsplash.com/photo-1520256862855-398228c41684",
    "brew": "https://images.unsplash.com/photo-1556909190-97b8f3f2ab1b",
    "mist": "https://images.unsplash.com/photo-1504898770365-14faca6f86e1",
    "onion": "https://images.unsplash.com/photo-1504196606672-aef5c9cefc92",
    "treasure": "https://images.unsplash.com/photo-1549880338-65ddcdfd017b",
    "frost": "https://images.unsplash.com/photo-1519681393784-d120267933ba",
    "forge": "https://images.unsplash.com/photo-1519710164239-da123dc03ef4",
    "werewolf": "https://images.unsplash.com/photo-1482192505345-5655af888cc4",
    "scissors": "https://images.unsplash.com/photo-1500021802231-0a1ff452b1d1",
    "willow": "https://images.unsplash.com/photo-1501785888041-af3ef285b470",
    "cave": "https://images.unsplash.com/photo-1454179083322-198bb4daae1b",
    "dark": "https://images.unsplash.com/photo-1454179083322-198bb4daae1b?ix=dark",
    "wyrm": "https://images.unsplash.com/photo-1469474968028-56623f02e42e",
    "sphinx": "https://images.unsplash.com/photo-1494738073002-80e2b34f3f49",
    "altar": "https://images.unsplash.com/photo-1482192505345-5655af888cc4?ix=altar",
    "finale": "https://images.unsplash.com/photo-1519681393784-d120267933ba?ix=finale",
    "bad": "https://images.unsplash.com/photo-1518837695005-2083093ee35b"
}

# === GAME DATA ===
@dataclass
class Combat:
    enemy: str
    max_hp: int
    hp: int
    img: str
    # –±–∞–∑–æ–≤—ã–π —É—Ä–æ–Ω –≤—Ä–∞–≥–∞ –Ω–∞ —Ö–æ–¥
    dmg_min: int
    dmg_max: int
    # –æ–ø–∏—Å–∞–Ω–∏–µ/–ø–æ–¥—Å–∫–∞–∑–∫–∞
    hint: str
    # —Å–ª–µ–¥—É—é—â–∞—è –ª–æ–∫–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–±–µ–¥–µ
    win_to: str
    # –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å (–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã)
    trait: Optional[str] = None  # 'needs_silver', 'weak_to_igni', 'stuns_with_amulet', 'weak_to_aard'

@dataclass
class Session:
    max_hp: int = 50
    hp: int = 50
    level: int = 1
    xp: int = 0
    dmg_min: int = 6
    dmg_max: int = 12
    yrden_turns: int = 0
    _axii_last_success: bool = False
    _burned_item_last: str = ""
    location: str = "intro"
    inventory: List[str] = field(default_factory=list)
    finished: bool = False
    # –∞–∫—Ç–∏–≤–Ω—ã–π –±–æ–π
    combat: Optional[Combat] = None
    # –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ–µ —Å–ø–∞—Å–µ–Ω–∏–µ –æ—Ç –ª–µ—Ç–∞–ª—å–Ω–æ–≥–æ —É–¥–∞—Ä–∞
    fate: int = 1

SESS: Dict[int, Session] = {}

def sget(uid: int) -> Session:
    if uid not in SESS:
        SESS[uid] = Session()
    return SESS[uid]

def have(s: Session, item: str) -> bool:
    n = norm(item)
    return any(norm(x) == n for x in s.inventory)

def add_item(s: Session, item: str):
    if not have(s, item):
        s.inventory.append(item)

# === NODES ===
NODES = {
    "intro": {
        "img": IMG["village"],
        "text": (
            "üõ° *–ö–æ–ª–æ–≤—Ä–∞—Ç ‚Äî –≤–µ–¥—å–º–∞–∫ –î—Ä–µ–≤–Ω–µ–π –†—É—Å–∏*\n\n"
            "–¢–µ–±—è –ø—Ä–∏–∑–≤–∞–ª–∏ –≤ —Å–µ–≤–µ—Ä–Ω—ã–π —É–µ–∑–¥: –Ω–æ—á—å—é –≤ –ª–µ—Å—É —à–µ–ø—á—É—Ç –æ–≥–æ–Ω—å–∫–∏, –≤ –¥–µ—Ä–µ–≤–Ω–µ –ø—Ä–æ–ø–∞–¥–∞—é—Ç –ª—é–¥–∏, "
            "–Ω–∞ –±–æ–ª–æ—Ç–µ –≤–æ–µ—Ç –í–æ–ª–∫–æ–ª–∞–∫, –∞ –≤ –∫–∞–º–µ–Ω–Ω—ã—Ö –∫—Ä—É–≥–∞—Ö —Å—Ç—ã–Ω–µ—Ç –ú–æ—Ä–æ–∑–Ω–∏—Ü–∞. –ö–æ–ª–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –∞–º—É–ª–µ—Ç —Å—Ç–∞—Ä—Ü–µ–≤ "
            "–æ–±–µ—â–∞–µ—Ç –¥–æ—Ä–æ–≥—É –∫ –∞–ª—Ç–∞—Ä—é, –≥–¥–µ —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏—á–∏–Ω–∞ –±–µ–¥—ã. –ü—Ä–æ–π–¥–∏ —Ç—Ä–æ–ø—ã, –∏–∑–±—ã, –∫—É—Ä–≥–∞–Ω—ã, —Å–≤—è—Ç–∏–ª–∏—â–∞ –∏ –ø–µ—â–µ—Ä—ã, "
            "—Å—Ä–∞–∑–∏—Å—å —Å —á—É–¥–æ–≤–∏—â–∞–º–∏, —Ä–∞–∑–≥–∞–¥–∞–π —Ä—É–Ω—ã –∏ —Å–æ–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤—ã–∂–∏—Ç—å. –ù–∞ –∞–ª—Ç–∞—Ä–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∫—Ä—É–≥ ‚Äî –∏ –∑–ª–æ –ø–∞–¥—ë—Ç.\n\n"
            "–£ —Ç–µ–±—è 8 –∂–∏–∑–Ω–µ–π. –í—Å—ë —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî *–∫–Ω–æ–ø–∫–∞–º–∏*. –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ –∑–∞–ø—Ä–æ—Å—É.\n"
            "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å?"
        ),
        "buttons": [
            [{"text": "–í –ø—É—Ç—å", "to": "trail"}, {"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–°–ª–µ–¥ –¥–µ—Ä–∂–∏—Å—å –±–ª–∏–∂–µ –∫ –¥–µ—Ä–µ–≤–Ω–µ, –∑–∞—Ç–µ–º —É—Ö–æ–¥–∏ –Ω–∞ —Å–µ–≤–µ—Ä–Ω—É—é —Ç—Ä–æ–ø—É."}]
        ]
    },

    "trail": {
        "img": IMG["forest_trail"],
        "text": "üå≤ –¢—Ä–æ–ø–∞ —É –∫—Ä–æ–º–∫–∏ –ª–µ—Å–∞. –°–ª–µ–¥—ã –≤–µ–¥—É—Ç –≤ —á–∞—â—É. –ö—É–¥–∞ –∏–¥—Ç–∏?",
        "buttons": [
            [{"text": "–ù–∞–ª–µ–≤–æ (–∫ —Ä—É–Ω–∞–º)", "to": "rune_sun"}, {"text": "–ù–∞–ø—Ä–∞–≤–æ (–∫ –±–æ–ª–æ—Ç–∞–º)", "to": "willow_lights"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–õ–µ—à–∏–π –ª—é–±–∏—Ç —Ç—å–º—É ‚Äî —Å–ø–µ—Ä–≤–∞ –Ω–∞–π–¥–∏ —Ç–æ, —á—Ç–æ –µ—ë —Ä–µ–∂–µ—Ç."}]
        ]
    },

    "rune_sun": {
        "img": IMG["rune_sun"],
        "text": "‚òÄÔ∏è –ö–∞–º–µ–Ω—å —Å —Ä—É–Ω–æ–π. –ù–∞–¥–ø–∏—Å—å: ¬´–¢–æ, —á—Ç–æ —Ä–µ–∂–µ—Ç —Ç—å–º—É¬ª.",
        "buttons": [
            [{"text": "–°–≤–µ—Ç", "to": "leshy_spawn"}, {"text": "–ù–æ–∂", "to": "punish_back_trail"}, {"text": "–í–µ—Ç–µ—Ä", "to": "punish_back_trail"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–û—Ç–≤–µ—Ç ‚Äî —Ç–æ, —á—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞—Ç–æ—á–∏—Ç—å."}]
        ]
    },

    "punish_back_trail": {
        "img": IMG["bad"],
        "text": "–¢—ã –æ—Å—Ç—É–ø–∏–ª—Å—è ‚Äî –Ω–µ—á–∏—Å—Ç—å —à–µ–ø—á–µ—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ. ‚àí1 –∂–∏–∑–Ω—å.",
        "hp_delta": -1,
        "buttons": [
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–æ–ø–µ", "to": "trail"}]
        ]
    },

    "leshy_spawn": {
        "img": IMG["leshy"],
        "text": "üåø –í —á–∞—â–µ –≤—ã—Ö–æ–¥–∏—Ç –õ–µ—à–∏–π. –í–µ—Ç–≤–∏ —à–µ–≤–µ–ª—è—Ç—Å—è.",
        "combat": Combat(
            enemy="–õ–µ—à–∏–π",
            max_hp=60, hp=60, img=IMG["leshy"],
            dmg_min=1, dmg_max=3,
            hint="–û–≥–æ–Ω—å –ø—Ä–æ—Ç–∏–≤ –¥—Ä–µ–≤–Ω–∏—Ö ‚Äî —Å–∏–ª–∞. –ó–Ω–∞–∫ *–ò–≥–Ω–∏* –∂–∂—ë—Ç –∫–æ—Ä—É.",
            win_to="herb_patch",
            trait="weak_to_igni"
        )
    },

    "herb_patch": {
        "img": IMG["herbs"],
        "text": "üåæ –ü–æ–ª—è–Ω–∞ —Ç—Ä–∞–≤. –°–æ—Ä–≤—ë—à—å –Ω–µ–º–Ω–æ–≥–æ?",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å —Ç—Ä–∞–≤—ã", "data": "take:—Ç—Ä–∞–≤—ã:brew_hut"}],
            [{"text": "–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ –±–µ–∑ —Ç—Ä–∞–≤", "to": "mist_wraith"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–¢—Ä–∞–≤—ã –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è, —á—Ç–æ–±—ã —Å–≤–∞—Ä–∏—Ç—å –∑–µ–ª—å–µ –ø–µ—Ä–µ–¥ —Ç—É–º–∞–Ω–Ω–∏–∫–æ–º."}]
        ]
    },

    "brew_hut": {
        "img": IMG["brew"],
        "text": "üß™ –í —Å—Ç–∞—Ä–æ–π –∏–∑–±–µ –º–æ–∂–Ω–æ —Å–≤–∞—Ä–∏—Ç—å –∑–µ–ª—å–µ.",
        "buttons": [
            [{"text": "–°–≤–∞—Ä–∏—Ç—å –∑–µ–ª—å–µ", "data": "brew:–∑–µ–ª—å–µ:mist_wraith"}],
            [{"text": "–í—ã–π—Ç–∏ –±–µ–∑ –∑–µ–ª—å—è", "to": "mist_wraith"}]
        ]
    },

    "mist_wraith": {
        "img": IMG["mist"],
        "text": "üí® –í —Ç—É–º–∞–Ω–µ –º–µ—Ä—Ü–∞–µ—Ç —Ç—É–º–∞–Ω–Ω–∏–∫ ‚Äî –±—å—ë—Ç –∏–∑ –∑–∞—Å–∞–¥—ã.",
        "combat": Combat(
            enemy="–¢—É–º–∞–Ω–Ω–∏–∫",
            max_hp=70, hp=70, img=IMG["mist"],
            dmg_min=1, dmg_max=2,
            hint="–ó–µ–ª—å–µ –ø–æ–≤—ã—à–∞–µ—Ç —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å. –û–≥–æ–Ω—å —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Å–ª–∞–±–µ–µ, —á–µ–º –ø–æ –ª–µ—à–µ–º—É.",
            win_to="onion_riddle"
        )
    },

    "onion_riddle": {
        "img": IMG["onion"],
        "text": "üß© ¬´–°–∏–¥–∏—Ç –¥–µ–¥, –≤–æ —Å—Ç–æ —à—É–± –æ–¥–µ—Ç¬ª.",
        "buttons": [
            [{"text": "–õ—É–∫", "to": "amulet_room"}, {"text": "–ö–∞–ø—É—Å—Ç–∞", "to": "punish_back_trail"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–ï–≥–æ —á–∏—Å—Ç—è—Ç –¥–æ —Å–ª—ë–∑."}]
        ]
    },

    "amulet_room": {
        "img": IMG["treasure"],
        "text": "ü™¨ –ù–∞ –ø—å–µ–¥–µ—Å—Ç–∞–ª–µ ‚Äî –∫–æ–ª–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –∞–º—É–ª–µ—Ç.",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å –∞–º—É–ª–µ—Ç", "data": "take:–∞–º—É–ª–µ—Ç:frost_circles"}],
            [{"text": "–û—Å—Ç–∞–≤–∏—Ç—å –∏ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ", "to": "frost_circles"}]
        ]
    },

    "frost_circles": {
        "img": IMG["frost"],
        "text": "‚ùÑÔ∏è –ö–∞–º–µ–Ω–Ω—ã–µ –∫—Ä—É–≥–∏ ‚Äî –ú–æ—Ä–æ–∑–Ω–∏—Ü–∞ –≤–∏—Ç–∞–µ—Ç –Ω–∞–¥ –ª—å–¥–æ–º.",
        "combat": Combat(
            enemy="–ú–æ—Ä–æ–∑–Ω–∏—Ü–∞",
            max_hp=85, hp=85, img=IMG["frost"],
            dmg_min=2, dmg_max=3,
            hint="–ê–º—É–ª–µ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç–±–∏—Ç—å —Ö–æ–ª–æ–¥: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ –±–æ—é.",
            win_to="forge"
        )
    },

    "forge": {
        "img": IMG["forge"],
        "text": "‚öíÔ∏è –í –ø—É—Å—Ç–æ–π –∫—É–∑–Ω–µ –Ω–∞–∫–æ–≤–∞–ª—å–Ω—è –º–µ—Ä—Ü–∞–µ—Ç. –í–æ–∑—å–º—ë—à—å –∫–ª–∏–Ω–æ–∫?",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å —Å–µ—Ä–µ–±—Ä—è–Ω—ã–π –∫–ª–∏–Ω–æ–∫", "data": "take:—Å–µ—Ä–µ–±—Ä—è–Ω—ã–π –∫–ª–∏–Ω–æ–∫:werewolf"}],
            [{"text": "–û—Å—Ç–∞–≤–∏—Ç—å –∏ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ", "to": "werewolf"}]
        ]
    },

    "werewolf": {
        "img": IMG["werewolf"],
        "text": "üê∫ –ò–∑ –∫—É—Ä–≥–∞–Ω–∞ –≤—ã—Ö–æ–¥–∏—Ç –í–æ–ª–∫–æ–ª–∞–∫.",
        "combat": Combat(
            enemy="–í–æ–ª–∫–æ–ª–∞–∫",
            max_hp=100, hp=100, img=IMG["werewolf"],
            dmg_min=2, dmg_max=4,
            hint="–°–µ—Ä–µ–±—Ä—è–Ω—ã–π –∫–ª–∏–Ω–æ–∫ —Ä–≤—ë—Ç –ø–ª–æ—Ç—å —á—É–¥–æ–≤–∏—â–∞ –∫—É–¥–∞ —Å–∏–ª—å–Ω–µ–µ.",
            win_to="scissors_riddle",
            trait="needs_silver"
        )
    },

    "scissors_riddle": {
        "img": IMG["scissors"],
        "text": "‚úÇÔ∏è ¬´–î–≤–∞ –∫–æ–ª—å—Ü–∞, –¥–≤–∞ –∫–æ–Ω—Ü–∞, –ø–æ—Å—Ä–µ–¥–∏–Ω–µ –≥–≤–æ–∑–¥–∏–∫¬ª.",
        "buttons": [
            [{"text": "–ù–æ–∂–Ω–∏—Ü—ã", "to": "bog_willows"}, {"text": "–ö–ª–µ—â–∏", "to": "punish_back_trail"}, {"text": "–û—á–∫–∏", "to": "punish_back_trail"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–ï—é —Ä–µ–∂—É—Ç —Ç–∫–∞–Ω—å, –±—É–º–∞–≥—É."}]
        ]
    },

    "willow_lights": {
        "img": IMG["willow"],
        "text": "üîµ –ë–æ–ª–æ—Ç–Ω—ã–µ –æ–≥–æ–Ω—å–∫–∏ –º–∞–Ω—è—Ç –ø—Ä–æ—á—å –æ—Ç —Ç—Ä–æ–ø—ã.",
        "buttons": [
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è", "to": "trail"}, {"text": "–ò–¥—Ç–∏ –Ω–∞ –æ–≥–Ω–∏ (–æ–ø–∞—Å–Ω–æ)", "to": "punish_back_trail"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–û–≥–æ–Ω—å–∫–∏ –∑–∞–≤–æ–¥—è—Ç –ø—É—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≥–∏–±–µ–ª—å."}]
        ]
    },

    "bog_willows": {
        "img": IMG["cave"],
        "text": "üî• –í—Ö–æ–¥ –≤ –ø–µ—â–µ—Ä—É. –£ —Å—Ç–µ–Ω—ã ‚Äî —Ñ–∞–∫–µ–ª.",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å —Ñ–∞–∫–µ–ª", "data": "take:—Ñ–∞–∫–µ–ª:dark_tunnel"}],
            [{"text": "–ò–¥—Ç–∏ –±–µ–∑ —Ñ–∞–∫–µ–ª–∞", "to": "dark_tunnel"}]
        ]
    },

    "dark_tunnel": {
        "img": IMG["dark"],
        "text": "üåë –•–æ–¥—ã —É—Ö–æ–¥—è—Ç –≤–æ —Ç—å–º—É. –ß–µ–º –æ—Å–≤–µ—Ç–∏—à—å –ø—É—Ç—å?",
        "buttons": [
            [{"text": "–ó–∞–∂–µ—á—å —Ñ–∞–∫–µ–ª", "to": "wyrm_lair"}],
            [{"text": "–ò–¥—Ç–∏ –Ω–∞–æ—â—É–ø—å (–æ–ø–∞—Å–Ω–æ)", "to": "punish_back_trail"}]
        ]
    },

    "wyrm_lair": {
        "img": IMG["wyrm"],
        "text": "üêâ –ü–æ–¥ —Å–≤–æ–¥–æ–º —à–µ–≤–µ–ª–∏—Ç—Å—è –∑–º–µ–π.",
        "combat": Combat(
            enemy="–ó–º–µ–π",
            max_hp=90, hp=90, img=IMG["wyrm"],
            dmg_min=2, dmg_max=3,
            hint="–ó–Ω–∞–∫ *–ê–∞—Ä–¥* (–≤–µ—Ç–µ—Ä) —Å–±–∏–≤–∞–µ—Ç —á—É–¥–æ–≤–∏—â–µ.",
            win_to="sphinx_riddle",
            trait="weak_to_aard"
        )
    },

    "sphinx_riddle": {
        "img": IMG["sphinx"],
        "text": "üß† ¬´–£—Ç—Ä–æ–º –Ω–∞ —á–µ—Ç—ã—Ä—ë—Ö, –¥–Ω—ë–º –Ω–∞ –¥–≤—É—Ö, –≤–µ—á–µ—Ä–æ–º –Ω–∞ —Ç—Ä—ë—Ö¬ª.",
        "buttons": [
            [{"text": "–ß–µ–ª–æ–≤–µ–∫", "to": "altar"}, {"text": "–ö–æ–Ω—å", "to": "punish_back_trail"}, {"text": "–°—Ç–∞—Ä–∏–∫", "to": "punish_back_trail"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–†–µ—á—å –æ –∂–∏–∑–Ω–∏ –æ—Ç –º–ª–∞–¥–µ–Ω—Ü–∞ –¥–æ —Å—Ç–∞—Ä–æ—Å—Ç–∏."}]
        ]
    },

    "altar": {
        "img": IMG["altar"],
        "text": "‚õ® –£ –∞–ª—Ç–∞—Ä—è —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ —Å–ª–æ–≤–æ —Å–∏–ª—ã.",
        "buttons": [
            [{"text": "–ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ ¬´–ö–æ–ª–æ–≤—Ä–∞—Ç¬ª", "to": "finale"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint": "–ö—Ä—É–≥, –≤—Ä–∞—â–µ–Ω–∏–µ, –∑–∞—â–∏—Ç–∞ ‚Äî —Å–∏–º–≤–æ–ª —Ä–æ–¥–∞."}]
        ]
    },

    "finale": {
        "img": IMG["finale"],
        "text": "üèÅ –ó–ª–æ —Ä–∞—Å—Å–µ—è–Ω–æ. –¢—ã –ø–æ–ª—É—á–∞–µ—à—å —Ç—Ä–æ—Ñ–µ–π –∏ —Å–ª–∞–≤—É.\n–•–æ—á–µ—à—å —Å–Ω–æ–≤–∞? –ù–∞–∂–º–∏ ¬´–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ¬ª.",
        "buttons": [
            [{"text": "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", "to": "intro"}]
        ]
    },
}


# === EXPANSION: images & new nodes ===
IMG.update({
    "ruins": "https://images.unsplash.com/photo-1483721310020-03333e577078",
    "idol": "https://images.unsplash.com/photo-1523419409543-1882bd33f2e0",
    "witch": "https://images.unsplash.com/photo-1526318472351-c75fcf070305",
    "bog2": "https://images.unsplash.com/photo-1533587851505-d119e13fa0d7",
    "shadow": "https://images.unsplash.com/photo-1506744038136-46273834b3fb",
    "ognevic": "https://images.unsplash.com/photo-1519681393784-d120267933ba",
    "cave": "https://images.unsplash.com/photo-1507502707541-f369a3b18502",
    "serpent": "https://images.unsplash.com/photo-1515548212256-91d67ea4b222",
    "ghost": "https://images.unsplash.com/photo-1514511542222-1f2fc2d6a2fa",
    "ghoul": "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee",
    "crypt": "https://images.unsplash.com/photo-1482192596544-9eb780fc7f66",
    "ruins_inner": "https://images.unsplash.com/photo-1549880338-65ddcdfd017b",
})

NEW_NODES = {
    "ruins_path": {
        "img": IMG["ruins"],
        "text": "üèö *–°—Ç–∞—Ä–∞—è –¥–æ—Ä–æ–≥–∞ –∫ —Ä—É–∏–Ω–∞–º.*\n\n–î–æ—Ä–æ–≥–∞ —É—Ö–æ–¥–∏—Ç –≤ –∫–∞–º–µ–Ω–∏—Å—Ç—ã–π —è—Ä, –≥–¥–µ –∫–æ–≥–¥–∞-—Ç–æ —Å—Ç–æ—è–ª —Ö—Ä–∞–º. –ù–∞ –º—à–∏—Å—Ç—ã—Ö –ø–ª–∏—Ç–∞—Ö ‚Äî —Å–ª–µ–¥—ã –æ—Ç –∫–æ–ø—ã—Ç –∏ –∫—Ä—É–≥–∏, –±—É–¥—Ç–æ –∫—Ç–æ-—Ç–æ –¥–≤–∏–≥–∞–ª –∫–∞–º–Ω–∏.",
        "buttons": [
            [{"text": "–ö –≤–æ—Ä–æ—Ç–∞–º —Ä—É–∏–Ω", "to": "ruins_gate"}],
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–æ–ø–µ", "to": "trail"}]
        ]
    },
    "ruins_gate": {
        "img": IMG["idol"],
        "text": "üóø *–ö–∞–º–µ–Ω–Ω—ã–π –∏–¥–æ–ª —É –≤–æ—Ä–æ—Ç.*\n\n–õ–∏—Ü–æ –±–µ–∑ –≥–ª–∞–∑, —Ä–æ—Ç ‚Äî —â–µ–ª—å. –°–ª—ã—à–µ–Ω –Ω–∏–∑–∫–∏–π –≥—É–ª: –∏–¥–æ–ª –æ–∂–∏–≤–∞–µ—Ç.",
        "combat": Combat(enemy="–ö–∞–º–µ–Ω–Ω—ã–π –∏–¥–æ–ª", max_hp=110, hp=110, img=IMG["idol"], dmg_min=3, dmg_max=8, hint="–ö–∞–º–µ–Ω—å —Ç–µ—Ä–ø–µ–ª–∏–≤, –Ω–æ –±–æ–∏—Ç—Å—è –æ–≥–Ω—è. –ò–≥–Ω–∏ –ø—Ä–æ–∂–∏–≥–∞–µ—Ç —Ç—Ä–µ—â–∏–Ω—ã.", win_to="ruins_inner", trait="stone_skin"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "ruins_inner": {
        "img": IMG["ruins_inner"],
        "text": "üèõ *–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–∞–ª—ã —Ä—É–∏–Ω.*\n\n–ü—ã–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–Ω—ã, —à—ë–ø–æ—Ç —Å–∫–≤–æ–∑–Ω—è–∫–∞, –Ω–∞ –ø–ª–∏—Ç–∞—Ö ‚Äî —Ä—É–Ω—ã —Å—Ç–∞—Ä—Ü–µ–≤. –í –Ω–∏—à–∞—Ö ‚Äî —Ä–∞–∑–±–∏—Ç—ã–µ —Å–æ—Å—É–¥—ã, –≤ —É–≥–ª—É ‚Äî —Å–ª–µ–¥—ã –∫–æ—Å—Ç—Ä–∞ –∏ –∫–æ—Å—Ç–∏ –º–µ–ª–∫–∏—Ö –∑–≤–µ—Ä–µ–π.",
        "buttons": [
            [{"text": "üîç –û—Å–º–æ—Ç—Ä–µ—Ç—å —Ä—É–Ω—ã", "to": "ruins_riddle"}],
            [{"text": "–ò–¥—Ç–∏ –∫ –±–µ–ª–æ–π –≤–µ–¥—å–º–µ", "to": "white_witch_spawn"}],
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–æ–ø–µ", "to": "trail"}]
        ]
    },
    "ruins_riddle": {
        "img": IMG["ruins_inner"],
        "text": "–ù–∞ –ø–ª–∏—Ç–µ –≤—ã–≥—Ä–∞–≤–∏—Ä–æ–≤–∞–Ω–æ: ¬´–ß—Ç–æ —É—Ç—Ä–æ–º –Ω–∞ —á–µ—Ç—ã—Ä—ë—Ö, –¥–Ω—ë–º –Ω–∞ –¥–≤—É—Ö, –≤–µ—á–µ—Ä–æ–º –Ω–∞ —Ç—Ä—ë—Ö?¬ª",
        "buttons": [
            [{"text": "–ß–µ–ª–æ–≤–µ–∫", "to": "ruins_riddle_right"}],
            [{"text": "–í–æ–ª–∫", "to": "ruins_riddle_wrong"}],
            [{"text": "–ò–¥–æ–ª", "to": "ruins_riddle_wrong"}]
        ]
    },
    "ruins_riddle_right": {
        "img": IMG["ruins_inner"],
        "text": "–†—É–Ω—ã —Ç–µ–ø–ª–µ—é—Ç. –í –Ω–∏—à–µ —â—ë–ª–∫–Ω—É–ª–æ.",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å –∫–ª—é—á", "data": "take:–∫–ª—é—á:white_witch_spawn"}]
        ]
    },
    "ruins_riddle_wrong": {
        "img": IMG["ruins_inner"],
        "text": "–ü–ª–∏—Ç–∞ –¥—ë—Ä–Ω—É–ª–∞—Å—å ‚Äî –∫–∞–º–µ–Ω—å —É–¥–∞—Ä–∏–ª –ø–æ –Ω–æ–≥–µ.",
        "hp_delta": -10,
        "buttons": [
            [{"text": "–û—Ç–æ–π—Ç–∏ –∫ –∑–∞–ª—É", "to": "ruins_inner"}]
        ]
    },
    "white_witch_spawn": {
        "img": IMG["witch"],
        "text": "üëª *–í–µ–¥—å–º–∞ –≤ –±–µ–ª–æ–º* –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ç–µ–Ω–∏ –∫–æ–ª–æ–Ω–Ω—ã. –®–µ–ø—á–µ—Ç ‚Äî –∏ —Ö–æ–ª–æ–¥ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –ø–æ —Å–ø–∏–Ω–µ.",
        "combat": Combat(enemy="–í–µ–¥—å–º–∞ –≤ –±–µ–ª–æ–º", max_hp=80, hp=80, img=IMG["witch"], dmg_min=3, dmg_max=7, hint="–°—Ç—Ä–∞—Ö —Å—Ç—è–≥–∏–≤–∞–µ—Ç –≥—Ä—É–¥—å. –ü–æ–º–æ–∂–µ—Ç –ê–∫—Å–∏–π –∏–ª–∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π —É–¥–∞—Ä.", win_to="bog_path", trait="fear"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "bog_path": {
        "img": IMG["bog2"],
        "text": "üå´ *–ì–ª—É–±–æ–∫–æ–µ –±–æ–ª–æ—Ç–æ.*\n\n–û–≥–Ω–∏ –º–µ—Ä—Ü–∞—é—Ç –º–µ–∂–¥—É –∫–æ—á–∫–∞–º–∏, —Ç—Ä–æ—Å—Ç–Ω–∏–∫ —à–µ–ø—á–µ—Ç. –í—è–∑–∫–∞—è —Ç—Ä–æ–ø–∞ —É–≤–æ–¥–∏—Ç –≤—Å—ë –¥–∞–ª—å—à–µ.",
        "buttons": [
            [{"text": "üõ∂ –ü–æ–º–æ—á—å —Å—Ç–∞—Ä–∏–∫—É –ø–µ—Ä–µ–ø—Ä–∞–≤–∏—Ç—å –ª–æ–¥–∫—É", "to": "bog_oldman"}],
            [{"text": "–ü—Ä–æ–π—Ç–∏ –º–∏–º–æ", "to": "bog_shadow_spawn"}],
            [{"text": "–ö —à–µ–ø—á—É—â–µ–º—É –æ–≥–Ω—é", "to": "ognevic_spawn"}],
            [{"text": "–ù–∞–∑–∞–¥ –∫ —Ä–∞–∑–≤–∏–ª–∫–µ", "to": "trail"}]
        ]
    },
    "bog_oldman": {
        "img": IMG["bog2"],
        "text": "–°—Ç–∞—Ä–∏–∫ –∫–∏–≤–∞–µ—Ç –∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç. –ù–æ —Å–∏–ª—ã —É—Ö–æ–¥–∏—Ç –Ω–∞ –≤—ë—Å–ª–∞.",
        "hp_delta": -10,
        "buttons": [
            [{"text": "–ü–æ–ª—É—á–∏—Ç—å –∑–µ–ª—å–µ –∏ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ", "data": "take:–∑–µ–ª—å–µ:bog_shadow_spawn"}]
        ]
    },
    "bog_shadow_spawn": {
        "img": IMG["shadow"],
        "text": "üïØ *–ë–æ–ª–æ—Ç–Ω–∞—è —Ç–µ–Ω—å* –≤—ã–ø–ª—ã–≤–∞–µ—Ç –∏–∑ —Ç—É–º–∞–Ω–∞, —à–µ–≤–µ–ª—è—Å—å, –∫–∞–∫ –¥—ã–º.",
        "combat": Combat(enemy="–ë–æ–ª–æ—Ç–Ω–∞—è —Ç–µ–Ω—å", max_hp=70, hp=70, img=IMG["shadow"], dmg_min=2, dmg_max=6, hint="–¢–µ–Ω—å —É—Å–∫–æ–ª—å–∑–∞–µ—Ç ‚Äî –ø–æ–ø–∞–¥–∞—Ç—å —Å–ª–æ–∂–Ω–æ. –ê–∞—Ä–¥ —Å—Ä—ã–≤–∞–µ—Ç –º–∞—Å–∫—É.", win_to="cave_entrance", trait="evasive"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "ognevic_spawn": {
        "img": IMG["ognevic"],
        "text": "üî• *–û–≥–Ω–µ–≤–∏–∫* –≤—Å–ø—ã—Ö–∏–≤–∞–µ—Ç –ø—Ä—è–º–æ –∏–∑ —Ç—Ä—è—Å–∏–Ω—ã, —Å–∂–∏–≥–∞—è —Ç—Ä–æ—Å—Ç–Ω–∏–∫, –∂–∞—Ä –æ–±–∂–∏–≥–∞–µ—Ç –ª–∏—Ü–æ.",
        "combat": Combat(enemy="–û–≥–Ω–µ–≤–∏–∫", max_hp=85, hp=85, img=IMG["ognevic"], dmg_min=3, dmg_max=9, hint="–û–≥–æ–Ω—å –Ω–µ —Ç–µ—Ä–ø–∏—Ç –ø—É—Å—Ç–æ—Ç—ã. –ê–∞—Ä–¥ —Å—Ä—ã–≤–∞–µ—Ç —è–∑—ã–∫–∏ –ø–ª–∞–º–µ–Ω–∏.", win_to="cave_entrance", trait="burn_items"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "cave_entrance": {
        "img": IMG["cave"],
        "text": "üï≥ *–í—Ö–æ–¥ –≤ –ø–µ—â–µ—Ä—É.*\n\n–•–æ–ª–æ–¥–Ω—ã–π –≤–æ–∑–¥—É—Ö —Ç—è–Ω–µ—Ç —Å–Ω–∏–∑—É. –°—Ç–µ–Ω—ã –∏–∑—Ä–µ–∑–∞–Ω—ã, –±—É–¥—Ç–æ –∫–æ–≥—Ç—è–º–∏. –ì–¥–µ-—Ç–æ –≥–ª—É–±–∂–µ –∫–∞–ø–∞–µ—Ç –≤–æ–¥–∞.",
        "buttons": [
            [{"text": "ü™® –û—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–µ–Ω—É (—Å–≤–∏—Ç–æ–∫ –æ–≥–Ω—è)", "to": "cave_scroll"}],
            [{"text": "üëÇ –ü—Ä–∏—Å–ª—É—à–∞—Ç—å—Å—è –∫ —ç—Ö—É", "to": "cave_echo"}],
            [{"text": "–°–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∏–∂–µ", "to": "serpent_spawn"}],
            [{"text": "–û—Ç–≤–µ—Ç–≤–ª–µ–Ω–∏–µ –∫ –Ω–∏—à–µ", "to": "ghost_spawn"}],
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –±–æ–ª–æ—Ç—É", "to": "bog_path"}]
        ]
    },
    "cave_scroll": {
        "img": IMG["cave"],
        "text": "–í —Ç—Ä–µ—â–∏–Ω–µ —Å—Ç–µ–Ω—ã —Å–ø—Ä—è—Ç–∞–Ω —Å–≤–∏—Ç–æ–∫.",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å —Å–≤–∏—Ç–æ–∫ –æ–≥–Ω—è", "data": "take:—Å–≤–∏—Ç–æ–∫ –æ–≥–Ω—è:cave_entrance"}]
        ]
    },
    "cave_echo": {
        "img": IMG["cave"],
        "text": "–≠—Ö–æ —à–µ–ø—á–µ—Ç: ¬´–ß—Ç–æ —Ç—è–∂–µ–ª–µ–µ ‚Äî –ø—É–¥ –≤–∞—Ç—ã –∏–ª–∏ –ø—É–¥ –∂–µ–ª–µ–∑–∞?¬ª",
        "buttons": [
            [{"text": "–û–¥–∏–Ω–∞–∫–æ–≤–æ", "to": "echo_right"}],
            [{"text": "–ñ–µ–ª–µ–∑–æ", "to": "echo_wrong"}]
        ]
    },
    "echo_right": {
        "img": IMG["cave"],
        "text": "–ì–æ–ª–æ—Å –æ–¥–æ–±—Ä—è–µ—Ç. —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å –ø—Ä–∏–ª–∏–≤ —Å–∏–ª.",
        "hp_delta": +5,
        "buttons": [
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–∑–≤–∏–ª–∫–µ", "to": "cave_entrance"}]
        ]
    },
    "echo_wrong": {
        "img": IMG["cave"],
        "text": "–≠—Ö–æ —Å–º–µ—ë—Ç—Å—è –∏ –≥–∞—Å–∏—Ç —Ñ–∞–∫–µ–ª.",
        "hp_delta": -5,
        "buttons": [
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–∑–≤–∏–ª–∫–µ", "to": "cave_entrance"}]
        ]
    },
    "serpent_spawn": {
        "img": IMG["serpent"],
        "text": "üêç *–ó–º–µ–π —Ç—Ä—ë—Ö–≥–ª–∞–≤—ã–π* –∏–∑–≤–∏–≤–∞–µ—Ç—Å—è, –∫–∞–∂–¥–∞—è –≥–æ–ª–æ–≤–∞ —à–∏–ø–∏—Ç –ø–æ-—Å–≤–æ–µ–º—É.",
        "combat": Combat(enemy="–ó–º–µ–π —Ç—Ä—ë—Ö–≥–ª–∞–≤—ã–π", max_hp=120, hp=120, img=IMG["serpent"], dmg_min=3, dmg_max=8, hint="–†—É–±–∏ –±—ã—Å—Ç—Ä–æ ‚Äî –≥–æ–ª–æ–≤—ã –ø—Ä–æ–º–∞—Ö–∏–≤–∞—é—Ç—Å—è, –Ω–æ –µ—Å–ª–∏ –ø–æ–ø–∞–¥—É—Ç ‚Äî –±—É–¥–µ—Ç –±–æ–ª—å–Ω–æ.", win_to="crypt_hall", trait="double_strike"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "ghost_spawn": {
        "img": IMG["ghost"],
        "text": "‚ö∞Ô∏è *–ü—Ä–∏–∑—Ä–∞–∫ –≤–æ–∏–Ω–∞* –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ç—å–º—ã –Ω–∏—à–∏, —à–µ–ø—á–µ—Ç –¥—Ä–µ–≤–Ω–∏–µ –∫–ª—è—Ç–≤—ã.",
        "combat": Combat(enemy="–ü—Ä–∏–∑—Ä–∞–∫ –≤–æ–∏–Ω–∞", max_hp=75, hp=75, img=IMG["ghost"], dmg_min=2, dmg_max=7, hint="–ï–º—É –Ω–µ –ø–æ –¥—É—à–µ –≥—Ä—É–±–∞—è —Å–∏–ª–∞. –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è –∏ –∞–º—É–ª–µ—Ç –ø–æ–º–æ–≥—É—Ç.", win_to="crypt_hall", trait="reflect"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "crypt_hall": {
        "img": IMG["crypt"],
        "text": "üïØ *–ó–∞–ª –∫—Ä–∏–ø—Ç—ã.*\n\n–°–≤–µ—á–∏ —Å—Ç–µ–∫–ª–∏ –≤ –∫–∞–º–µ–Ω–Ω—ã–µ —á–∞—à–∏, –∑–∞–ø–∞—Ö –ª–∞–¥–∞–Ω–∞ –∏ –∂–µ–ª–µ–∑–∞. –ü–ª–∏—Ç–∞ –∞–ª—Ç–∞—Ä—è –∑–∞–∫—Ä—ã—Ç–∞ –ø–µ—á–∞—Ç—å—é.",
        "buttons": [
            [{"text": "‚ö° –°–ª–æ–º–∞—Ç—å –ø–µ—á–∞—Ç—å (‚àí15 HP)", "to": "crypt_break"}],
            [{"text": "üßø –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∞–º—É–ª–µ—Ç", "to": "crypt_open"}],
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–æ–ø–µ", "to": "trail"}]
        ]
    },
    "crypt_break": {
        "img": IMG["crypt"],
        "text": "–¢—ã —Å—Ä—ã–≤–∞–µ—à—å –ø–µ—á–∞—Ç—å —Å–∏–ª–æ–π.",
        "hp_delta": -15,
        "buttons": [
            [{"text": "–ö —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É –∞–ª—Ç–∞—Ä—é", "to": "trail"}]
        ]
    },
    "crypt_open": {
        "img": IMG["crypt"],
        "text": "–ê–º—É–ª–µ—Ç —Ç–µ–ø–ª–µ–µ—Ç, —Ä—É–Ω—ã —Ä–∞—Å—Ç–≤–æ—Ä—è—é—Ç—Å—è.",
        "buttons": [
            [{"text": "–ö —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É –∞–ª—Ç–∞—Ä—é", "to": "trail"}]
        ]
    },
    
    "scorpion_path": {
        "img": "https://images.unsplash.com/photo-1609587314425-c65f63dc67d3",
        "text": "üèú *–ü—É—Å—Ç—ã–Ω–Ω–∞—è —Ä–∞—Å—â–µ–ª–∏–Ω–∞.*\\n\\n–£–∑–∫–∏–π –ø—Ä–æ—Ö–æ–¥ –º–µ–∂–¥—É –∫–∞–º–µ–Ω–Ω—ã–º–∏ —Å—Ç–µ–Ω–∞–º–∏. –í –ø–µ—Å–∫–µ –ø–æ–±–ª—ë—Å–∫–∏–≤–∞—é—Ç —Ö–∏—Ç–∏–Ω–æ–≤—ã–µ –ø–ª–∞—Å—Ç–∏–Ω—ã.",
        "buttons": [
            [{"text": "–û—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Å–æ–∫", "to": "scorpion_spawn"}],
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–æ–ø–µ", "to": "trail"}]
        ]
    },
    "scorpion_spawn": {
        "img": "https://images.unsplash.com/photo-1618005182384-a83a8d0fa4c1",
        "text": "ü¶Ç *–ü–µ—Å—á–∞–Ω—ã–π —Å–∫–æ—Ä–ø–∏–æ–Ω* –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –∏–∑ –ø–µ—Å–∫–∞, –∫–ª–µ—à–Ω–∏ —â—ë–ª–∫–∞—é—Ç, –∂–∞–ª–æ –±–ª–µ—Å—Ç–∏—Ç.",
        "combat": Combat(enemy="–ü–µ—Å—á–∞–Ω—ã–π —Å–∫–æ—Ä–ø–∏–æ–Ω", max_hp=85, hp=85,
            img="https://images.unsplash.com/photo-1618005182384-a83a8d0fa4c1",
            dmg_min=4, dmg_max=9,
            hint="–Ø–¥–æ–≤–∏—Ç–æ–µ –∂–∞–ª–æ. –ò—Å–ø–æ–ª—å–∑—É–π –ö–≤–µ–Ω –∏–ª–∏ –ê–∞—Ä–¥, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∂–∏—Ç—å —è–¥.",
            win_to="trail", trait="poison"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
    "ghoul_spawn": {
        "img": IMG["ghoul"],
        "text": "ü©∏ *–í—É—Ä–¥–∞–ª–∞–∫* –∫—Ä–∞–¥—ë—Ç—Å—è, –∑—É–±—ã –ø–æ–±–ª—ë—Å–∫–∏–≤–∞—é—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ.",
        "combat": Combat(enemy="–í—É—Ä–¥–∞–ª–∞–∫", max_hp=90, hp=90, img=IMG["ghoul"], dmg_min=3, dmg_max=7, hint="–†–∞–Ω–∏—à—å ‚Äî –æ–Ω –ø—å—ë—Ç –∫—Ä–æ–≤—å. –ë–µ–π –±—ã—Å—Ç—Ä–æ –∏ –Ω–µ –ø–æ–¥–ø—É—Å–∫–∞–π.", win_to="trail", trait="lifesteal"),
        "buttons": [
            [{"text": "–£–¥–∞—Ä", "data": "fight:hit"}, {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
            [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"}, {"text": "–ö–≤–µ–Ω", "data": "fight:quen"}],
            [{"text": "–ò—Ä–¥–µ–Ω", "data": "fight:yrden"}, {"text": "–ê–∫—Å–∏–π", "data": "fight:axii"}],
            [{"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}, {"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"}],
            [{"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
        ]
    },
}

try:
    NODES.update(NEW_NODES)
    if "trail" in NODES and isinstance(NODES["trail"].get("buttons"), list):
        NODES["trail"]["buttons"].append([{"text": "–ü–æ–π—Ç–∏ –∫ —Ä—É–∏–Ω–∞–º", "to": "ruins_path"}])
        NODES["trail"]["buttons"].append([{"text": "–°–≤–µ—Ä–Ω—É—Ç—å –∫ –±–æ–ª–æ—Ç—É", "to": "bog_path"}])
        NODES["trail"]["buttons"].append([{"text": "–í –ø–µ—â–µ—Ä—É (–æ—Ç–≤–µ—Ç–≤–ª–µ–Ω–∏–µ)", "to": "cave_entrance"}])
    elif "intro" in NODES and isinstance(NODES["intro"].get("buttons"), list):
        NODES["intro"]["buttons"].append([{"text": "–ü–æ–π—Ç–∏ –∫ —Ä—É–∏–Ω–∞–º", "to": "ruins_path"}])
        NODES["intro"]["buttons"].append([{"text": "–°–≤–µ—Ä–Ω—É—Ç—å –∫ –±–æ–ª–æ—Ç—É", "to": "bog_path"}])
        NODES["intro"]["buttons"].append([{"text": "–í –ø–µ—â–µ—Ä—É (–æ—Ç–≤–µ—Ç–≤–ª–µ–Ω–∏–µ)", "to": "cave_entrance"}])
except Exception as e:
    pass


# === EXPANSION (Mirror Hall Riddle) ===
IMG.update({
    "mirror_hall": "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?ixlib=rb-4.0.3&auto=format&fit=crop&w=1280&q=80"
})

NEW_NODES_MIRROR = {
    "mirror_hall": {
        "img": IMG["mirror_hall"],
        "text": "ü™û *–ó–µ—Ä–∫–∞–ª—å–Ω—ã–π –∑–∞–ª.*\n\n–ü–ª–∏—Ç–∫–∏ –ø–æ–ª–∞ –æ—Ç—Ä–∞–∂–∞—é—Ç —Ç–µ–±—è, —Å–ª–æ–≤–Ω–æ –≤–æ–¥–∞. –ù–∞ —Å—Ç–µ–Ω–µ –≤—ã–≥—Ä–∞–≤–∏—Ä–æ–≤–∞–Ω–æ: ¬´–û—Ç–≤–µ—Ç—å ‚Äî –∏ –ø—É—Ç—å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è¬ª.",
        "buttons": [
            [{"text": "–ü–æ–¥–æ–π—Ç–∏ –∫ –Ω–∞–¥–ø–∏—Å–∏", "to": "mirror_riddle"}],
            [{"text": "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", "to": "trail"}]
        ]
    },
    "mirror_riddle": {
        "img": IMG["mirror_hall"],
        "text": "–ó–∞–≥–∞–¥–∫–∞: *–ß—Ç–æ –º–æ–∂–Ω–æ —Å–ª–æ–º–∞—Ç—å, –Ω–µ –∫–∞—Å–∞—è—Å—å?*",
        "buttons": [
            [{"text": "–¢–∏—à–∏–Ω—É", "to": "mirror_right"}],
            [{"text": "–õ—ë–¥", "to": "mirror_wrong"}],
            [{"text": "–ö–ª—è—Ç–≤—É", "to": "mirror_wrong"}]
        ]
    },
    "mirror_right": {
        "img": IMG["mirror_hall"],
        "text": "–ó–µ—Ä–∫–∞–ª–∞ –∑–≤–µ–Ω—è—Ç, –∏ –∏–∑ —Å—Ç–µ–Ω—ã –≤—ã–µ–∑–∂–∞–µ—Ç –Ω–∏—à–∞ —Å–æ —Å–≤–µ—Ç—è—â–∏–º—Å—è –æ—Å–∫–æ–ª–∫–æ–º.",
        "buttons": [
            [{"text": "–í–∑—è—Ç—å –æ—Å–∫–æ–ª–æ–∫ –∑–µ—Ä–∫–∞–ª–∞", "data": "take:–æ—Å–∫–æ–ª–æ–∫ –∑–µ—Ä–∫–∞–ª–∞:mirror_hall"}]
        ]
    },
    "mirror_wrong": {
        "img": IMG["mirror_hall"],
        "text": "–≠—Ö–æ –Ω–∞—Å–º–µ—Ö–∞–µ—Ç—Å—è, –∑–µ—Ä–∫–∞–ª–∞ –º—É—Ç–Ω–µ—é—Ç ‚Äî —Ç–µ–±–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ –ø–æ —Å–µ–±–µ.",
        "hp_delta": -7,
        "buttons": [
            [{"text": "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", "to": "mirror_riddle"}],
            [{"text": "–û—Ç—Å—Ç—É–ø–∏—Ç—å", "to": "mirror_hall"}]
        ]
    }
}

try:
    NODES.update(NEW_NODES_MIRROR)
    # –°—Å—ã–ª–∫–∞ –∏–∑ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Ç—Ä–æ–ø—ã
    if "trail" in NODES and isinstance(NODES["trail"].get("buttons"), list):
        NODES["trail"]["buttons"].append([{"text": "–ó–µ—Ä–∫–∞–ª—å–Ω—ã–π –∑–∞–ª", "to": "mirror_hall"}])
except Exception:
    pass

# === COMBAT ENGINE ===
def build_combat_message(s: Session) -> (str, dict, str):
    c = s.combat
    assert c is not None
    title = f"*{c.enemy}*"
    enemy_hp = f"HP {c.hp}/{c.max_hp}  [{hp_bar(c.hp, c.max_hp)}]"
    me_hp = f"–¢–≤–æ–∏ –∂–∏–∑–Ω–∏: {s.hp}/8  [{hp_bar(s.hp, 8)}]"
    effect_hint = "–ù–∞–∂–º–∏ ¬´–ü–æ–¥—Å–∫–∞–∑–∫–∞¬ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ."
    rows = [
        [{"text": "–£–¥–∞—Ä", "data": "fight:hit"},
         {"text": "–ò–≥–Ω–∏", "data": "fight:igni"}],
        [{"text": "–ê–∞—Ä–¥", "data": "fight:aard"},
         {"text": "–í—ã–ø–∏—Ç—å –∑–µ–ª—å–µ", "data": "fight:potion"}],
        [{"text": "–ü–æ–∫–∞–∑–∞—Ç—å –∞–º—É–ª–µ—Ç", "data": "fight:amulet"},
         {"text": "–ü–æ–¥—Å–∫–∞–∑–∫–∞", "data": "hint:combat"}],
    ]
    caption = f"{title}\n{enemy_hp}\n{me_hp}\n\n{effect_hint}"
    return caption, kb(rows), c.img

def calc_player_damage(action: str, s: Session, c: Combat) -> int:
    if action in ("potion", "quen", "yrden", "axii"):
        return 0
    if action == "hit":
        lo, hi = s.dmg_min, s.dmg_max
    elif action == "igni":
        lo, hi = max(1, s.dmg_min-1), s.dmg_max
    elif action == "aard":
        lo, hi = max(1, s.dmg_min-2), max(s.dmg_min, s.dmg_max-1)
    elif action == "amulet":
        if c.trait == "stuns_with_amulet":
            return 12
        return 0
    else:
        lo, hi = 0, 0
    dmg = random.randint(lo, hi)
    if c.trait == "needs_silver" and (action == "hit") and have(s, "—Å–µ—Ä–µ–±—Ä—è–Ω—ã–π –∫–ª–∏–Ω–æ–∫"):
        dmg += 10
    if c.trait == "weak_to_igni" and action == "igni":
        dmg += 8
    if c.trait == "weak_to_aard" and action == "aard":
        dmg += 8
    trait = (c.trait or "").strip()
    if trait == "evasive":
        if random.random() < 0.25:
            dmg = 0
    if trait == "stone_skin":
        dmg = max(0, int(dmg * 0.7))
    if trait == "fear":
        dmg = int(dmg * 0.75)
    return max(0, dmg)

def calc_enemy_damage(s: Session, c: Combat, player_action: str, potion_used: bool) -> int:
    s._axii_last_success = False
    s._burned_item_last = ""
    dmg = random.randint(c.dmg_min, c.dmg_max)
    dmg = int(round(dmg * 1.35))
    if dmg < 1:
        dmg = 1
    if player_action == "quen":
        dmg = max(0, int(dmg * 0.6) - 2)
    if getattr(s, 'yrden_turns', 0) > 0:
        dmg = int(dmg * 0.7)
    if player_action == "axii":
        if random.random() < 0.5:
            s._axii_last_success = True
            return 0
    if player_action == "amulet" and c.enemy == "–ú–æ—Ä–æ–∑–Ω–∏—Ü–∞":
        dmg = 0
    trait = (c.trait or "").strip()
    if trait == "double_strike":
        total = 0
        for _ in range(2):
            if random.random() < 0.7:
                part = random.randint(max(1, c.dmg_min//2), c.dmg_max)
                part = int(round(part * 1.35))
                total += part
        dmg = max(dmg, total)
    if trait == "burn_items":
        if random.random() < 0.25:
            inv_norm = [norm(x) for x in s.inventory]
            if "–∑–µ–ª—å–µ" in inv_norm:
                s.inventory = [x for x in s.inventory if norm(x) != "–∑–µ–ª—å–µ"]
                s._burned_item_last = "–∑–µ–ª—å–µ"
            elif "—Ç—Ä–∞–≤—ã" in inv_norm:
                s.inventory = [x for x in s.inventory if norm(x) != "—Ç—Ä–∞–≤—ã"]
                s._burned_item_last = "—Ç—Ä–∞–≤—ã"
    if trait == "poison" and dmg > 0:
        if not hasattr(s, "poison_turns") or s.poison_turns <= 0:
            s.poison_turns = 3
    if potion_used:
        dmg //= 2
    if have(s, "–∞–º—É–ª–µ—Ç") and dmg > 0:
        dmg = max(0, dmg - 2)
    return dmg

# === RENDER LOCATION ===
async def show_location(chat_id: int, s: Session, loc_key: str):
    s.location = loc_key
    node = NODES[loc_key]

    # –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (—à—Ç—Ä–∞—Ñ hp)
    if "hp_delta" in node:
        s.hp += node["hp_delta"]
        s.hp = max(0, s.hp)

    # –±–æ–π?
    if "combat" in node and isinstance(node["combat"], Combat):
        # —Å—Ç–∞—Ä—Ç –±–æ—è
        c = node["combat"]
        # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–æ–ø–∏—é, —á—Ç–æ–±—ã –Ω–µ —à–∞—Ä–∏—Ç—å –æ–¥–∏–Ω Combat –Ω–∞ –≤—Å–µ—Ö
        s.combat = Combat(**asdict(c))
        # –∞–¥–∞–ø—Ç–∏–≤: –µ—Å–ª–∏ —É –≥–µ—Ä–æ—è –º–∞–ª–æ –∂–∏–∑–Ω–µ–π, –æ—Å–ª–∞–±–∏–º –≤—Ä–∞–≥–∞ –Ω–∞ 20%
        if s.hp <= 3:
            s.combat.max_hp = int(s.combat.max_hp * 0.8)
            s.combat.hp = s.combat.max_hp
        caption, markup, img = build_combat_message(s)
        await send_photo(chat_id, img, caption, markup)
        return

    # –æ–±—ã—á–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è
    text = node["text"]
    buttons_rows = []
    for row in node.get("buttons", []):
        row_btns = []
        for b in row:
            if "to" in b:
                row_btns.append({"text": b["text"], "data": f"go:{b['to']}"})
            elif "data" in b:
                row_btns.append({"text": b["text"], "data": b["data"]})
            elif "hint" in b:
                row_btns.append({"text": b["text"], "data": f"hint:{loc_key}"})
        buttons_rows.append(row_btns)

    await send_photo(chat_id, node["img"], text, kb(buttons_rows) if buttons_rows else None)

# === ENDPOINTS ===
@app.get("/")
def ok():
    return {"status": "ok"}

@app.on_event("startup")
async def _set_webhook():
    # –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    if WEBHOOK_BASE:
        await tg("setWebhook", {"url": f"{WEBHOOK_BASE}/webhook/{WEBHOOK_SECRET}"})

@app.post(f"/webhook/{WEBHOOK_SECRET}")
async def webhook(request: Request):
    try:
        upd = await request.json()
    except Exception:
        raise HTTPException(status_code=400, detail="invalid json")

    # messages
    msg = upd.get("message")
    if msg and "text" in msg:
        chat_id = msg["chat"]["id"]
        text = msg.get("text", "")
        t = norm(text)

        # –∫–æ–º–∞–Ω–¥—ã
        if t.startswith("/start"):
            SESS[chat_id] = Session()
            intro = (
                "–ö–æ–ª–æ–≤—Ä–∞—Ç ‚Äî –≤–µ–¥—å–º–∞–∫ –î—Ä–µ–≤–Ω–µ–π –†—É—Å–∏. –ï–≥–æ –ø—Ä–∏–∑–≤–∞–ª–∏ –≤ —Å–µ–≤–µ—Ä–Ω—ã–π —É–µ–∑–¥: –Ω–æ—á—å—é –≤ –ª–µ—Å—É —à–µ–ø—á—É—Ç –æ–≥–æ–Ω—å–∫–∏, "
                "–≤ –¥–µ—Ä–µ–≤–Ω–µ –ø—Ä–æ–ø–∞–¥–∞—é—Ç –ª—é–¥–∏, –Ω–∞ –±–æ–ª–æ—Ç–µ –≤–æ–µ—Ç –í–æ–ª–∫–æ–ª–∞–∫, –∞ –≤ –∫–∞–º–µ–Ω–Ω—ã—Ö –∫—Ä—É–≥–∞—Ö —Å—Ç—ã–Ω–µ—Ç –ú–æ—Ä–æ–∑–Ω–∏—Ü–∞. "
                "–ö–æ–ª–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –∞–º—É–ª–µ—Ç –æ–±–µ—â–∞–µ—Ç –¥–æ—Ä–æ–≥—É –∫ –∞–ª—Ç–∞—Ä—é, –≥–¥–µ —Å–∫—Ä—ã—Ç–∞ –ø—Ä–∏—á–∏–Ω–∞ –±–µ–¥—ã. "
                "–¢–µ–±—è –∂–¥—É—Ç 20 –ª–æ–∫–∞—Ü–∏–π, –±–æ–∏ –∏ –∑–∞–≥–∞–¥–∫–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ *–∫–Ω–æ–ø–∫–∞–º–∏*. –£–¥–∞—á–∏!\n"
            )
            await send_photo(chat_id, IMG["village"], intro)
            await show_location(chat_id, SESS[chat_id], "intro")
            return {"ok": True}

        if t in ("/–∂–∏–∑–Ω–∏", "/hp"):
            s = sget(chat_id)
            await send_text(chat_id, f"‚ù§ –¢–≤–æ–∏ –∂–∏–∑–Ω–∏: {s.hp}/{s.max_hp}  [{hp_bar(s.hp, s.max_hp)}]")
            return {"ok": True}

        if t in ("/–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", "/inv"):
            s = sget(chat_id)
            inv = ", ".join(s.inventory) if s.inventory else "–ø—É—Å—Ç–æ"
            markup = None
            if s.combat:
                markup = kb([[{"text": "‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–æ–π", "data": "fight:status"}]])
            await send_text(chat_id, f"üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {inv}", markup)
            return {"ok": True}

        if t in ("/–ø–æ–º–æ—â—å", "/help"):
            await send_text(chat_id, "–ò–≥—Ä–∞ –∫–Ω–æ–ø–∫–∞–º–∏. –ü–æ–¥—Å–∫–∞–∑–∫–∏ —Å–∫—Ä—ã—Ç—ã –∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ –∫–Ω–æ–ø–∫–µ ¬´–ü–æ–¥—Å–∫–∞–∑–∫–∞¬ª. "
                                     "–ö–æ–º–∞–Ω–¥—ã: /–∂–∏–∑–Ω–∏ /–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å /—Å–±—Ä–æ—Å /–ø–æ–º–æ—â—å.")
            return {"ok": True}

        if t in ("/—Å–±—Ä–æ—Å", "/reset"):
            SESS[chat_id] = Session()
            await send_text(chat_id, "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω.")
            await show_location(chat_id, SESS[chat_id], "intro")
            return {"ok": True}

        await send_text(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π *–∫–Ω–æ–ø–∫–∏* –Ω–∏–∂–µ. –ö–æ–º–∞–Ω–¥—ã: /–∂–∏–∑–Ω–∏ /–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å /—Å–±—Ä–æ—Å /–ø–æ–º–æ—â—å.")
        return {"ok": True}

    # callbacks (–∫–Ω–æ–ø–∫–∏)
    cq = upd.get("callback_query")
    if cq:
        data = cq.get("data", "")
        chat_id = cq["message"]["chat"]["id"]
        # acknowledge
        try:
            await tg("answerCallbackQuery", {"callback_query_id": cq["id"]})
        except Exception:
            pass

        s = sget(chat_id)

        # hints
        if data.startswith("hint:"):
            _, key = data.split(":", 1)
            if key == "combat" and s.combat:
                await send_text(chat_id, f"üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞ (–±–æ–π): {s.combat.hint}")
            else:
                node = NODES.get(key)
                hint = None
                if node:
                    for row in node.get("buttons", []):
                        for b in row:
                            if "hint" in b:
                                hint = b["hint"]
                                break
                    if hint:
                        await send_text(chat_id, f"üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: {hint}")
                    else:
                        await send_text(chat_id, "–ü–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∑–¥–µ—Å—å.")
            return {"ok": True}

        # go:<loc>
        if data.startswith("go:"):
            _, to = data.split(":", 1)
            await show_location(chat_id, s, to)
            return {"ok": True}

        # take:<item>:<next>
        if data.startswith("take:"):
            _, item, nxt = data.split(":", 2)
            add_item(s, item)
            await send_text(chat_id, f"–¢—ã –ø–æ–ª—É—á–∏–ª: *{item}*.")
            await show_location(chat_id, s, nxt)
            return {"ok": True}

        # brew:<item>:<next>
        if data.startswith("brew:"):
            _, item, nxt = data.split(":", 2)
            if item == "–∑–µ–ª—å–µ":
                if have(s, "—Ç—Ä–∞–≤—ã"):
                    add_item(s, "–∑–µ–ª—å–µ")
                    s.inventory = [x for x in s.inventory if norm(x) != "—Ç—Ä–∞–≤—ã"]
                    await send_text(chat_id, "–¢—ã —Å–≤–∞—Ä–∏–ª *–∑–µ–ª—å–µ*.")
                else:
                    await send_text(chat_id, "–ù–µ—Ç —Ç—Ä–∞–≤ ‚Äî –∑–µ–ª—å–µ –Ω–µ —Å–≤–∞—Ä–∏—Ç—å.")
            await show_location(chat_id, s, nxt)
            return {"ok": True}

        # fight:<action>
        if data.startswith("fight:"):
            if not s.combat:
                await send_text(chat_id, "–°–µ–π—á–∞—Å –Ω–µ –±–æ–π.")
                return {"ok": True}

            action = data.split(":", 1)[1]  # hit/igni/aard/potion/amulet/... 
            c = s.combat
            if action == "status":
                caption, markup, img = build_combat_message(s)
                await send_photo(chat_id, img, caption, markup)
                return {"ok": True}

            if action == "status":
                caption, markup, img = build_combat_message(s)
                await send_photo(chat_id, img, caption, markup)
                return {"ok": True}

            if action == "yrden":
                s.yrden_turns = 2

            # –±—ã–ª–æ –ª–∏ –∑–µ–ª—å–µ –î–û —Ä–∞—Å—Ö–æ–¥–∞
            potion_used = (action == "potion") and have(s, "–∑–µ–ª—å–µ")

            # —É—Ä–æ–Ω –∏–≥—Ä–æ–∫–∞
            pdmg = 0
            if action in ("hit", "igni", "aard", "amulet"):
                pdmg = calc_player_damage(action, s, c)
                c.hp -= pdmg
                c.hp = max(0, c.hp)

            # –ø–æ–±–µ–¥–∞ –¥–æ –æ—Ç–≤–µ—Ç–∞ –≤—Ä–∞–≥–∞
            if c.hp <= 0:
                await send_text(chat_id, f"üèÜ {c.enemy} –ø–æ–≤–µ—Ä–∂–µ–Ω!")
                s.combat = None
                await show_location(chat_id, s, c.win_to)
                return {"ok": True}

            # —É—Ä–æ–Ω –≤—Ä–∞–≥–∞ (—Å —É—á—ë—Ç–æ–º, —á—Ç–æ –∑–µ–ª—å–µ –≤—ã–ø–∏—Ç–æ –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ—Ç —Ö–æ–¥)
            edmg = calc_enemy_damage(s, c, action, potion_used)
            fate_saved = False
            if s.hp - edmg <= 0 and s.fate > 0:
                edmg = max(0, s.hp - 1)
                s.fate -= 1
                fate_saved = True

            s.hp -= edmg
            s.hp = max(0, s.hp)
            if (c.trait or "").strip() == "lifesteal" and edmg > 0:
                heal = max(1, edmg // 3)
                c.hp = min(c.max_hp, c.hp + heal)

            # —Ç–µ–ø–µ—Ä—å —Ç—Ä–∞—Ç–∏–º –∑–µ–ª—å–µ (–ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ª–æ–≥–∞)
            if potion_used:
                s.inventory = [x for x in s.inventory if norm(x) != "–∑–µ–ª—å–µ"]

            # –±–æ–µ–≤–æ–π –ª–æ–≥ –∏ –≤—ã–≤–æ–¥
            caption, markup, img = build_combat_message(s)
            log = []
            if action == "potion":
                if potion_used:
                    log.append("–¢—ã *–≤—ã–ø–∏–ª –∑–µ–ª—å–µ* ‚Äî —É—Ä–æ–Ω –≤ —ç—Ç–æ—Ç —Ö–æ–¥ —Å–Ω–∏–∂–µ–Ω.")
                else:
                    log.append("–¢—ã –ø—ã—Ç–∞–ª—Å—è –≤—ã–ø–∏—Ç—å –∑–µ–ª—å–µ, –Ω–æ –µ–≥–æ –Ω–µ—Ç.")
            elif action == "amulet":
                log.append("–¢—ã –ø–æ–∫–∞–∑–∞–ª *–∞–º—É–ª–µ—Ç*.")
            elif action == "hit":
                log.append(f"–¢—ã —É–¥–∞—Ä–∏–ª: ‚àí{pdmg} HP —É –≤—Ä–∞–≥–∞.")
            elif action == "igni":
                log.append(f"–ü—Ä–∏–º–µ–Ω—ë–Ω *–ò–≥–Ω–∏*: ‚àí{pdmg} HP —É –≤—Ä–∞–≥–∞.")
            elif action == "aard":
                log.append(f"–ü–æ—Ä—ã–≤ *–ê–∞—Ä–¥–∞*: ‚àí{pdmg} HP —É –≤—Ä–∞–≥–∞.")
            elif action == "quen":
                log.append("*–ö–≤–µ–Ω*: —â–∏—Ç —Å–º—è–≥—á–∏—Ç —É–¥–∞—Ä –≤ —ç—Ç–æ—Ç —Ö–æ–¥.")
            elif action == "yrden":
                log.append("*–ò—Ä–¥–µ–Ω*: –≤—Ä–∞–≥ –æ—Å–ª–∞–±–ª–µ–Ω –Ω–∞ 2 —Ö–æ–¥–∞.")
            elif action == "axii":
                if hasattr(s, "_axii_last_success") and s._axii_last_success:
                    log.append("*–ê–∫—Å–∏–π*: –≤—Ä–∞–≥ –æ—à–µ–ª–æ–º–ª—ë–Ω –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥!")
                else:
                    log.append("*–ê–∫—Å–∏–π*: –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª.")

            if edmg > 0:
                log.append(f"{c.enemy} –±—å—ë—Ç –ø–æ —Ç–µ–±–µ: ‚àí{edmg} HP.")
            else:
                log.append(f"{c.enemy} –Ω–µ —Å–º–æ–≥ –ø—Ä–∏—á–∏–Ω–∏—Ç—å –≤—Ä–µ–¥–∞ –≤ —ç—Ç–æ—Ç —Ö–æ–¥.")
            if hasattr(s, "_burned_item_last") and s._burned_item_last:
                log.append(f"–û–≥–æ–Ω—å –≤—Ä–∞–≥–∞ —Å–∂—ë–≥ *{s._burned_item_last}* –∏–∑ —Ç–≤–æ–µ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è!")
            if mirror_saved:
                log.append("‚ú® –û—Å–∫–æ–ª–æ–∫ –∑–µ—Ä–∫–∞–ª–∞ –≤—Å–ø—ã—Ö–Ω—É–ª –∏ —Å–ø–∞—Å —Ç–µ–±—è –æ—Ç –≥–∏–±–µ–ª–∏!")
            elif fate_saved:
                log.append("‚öñÔ∏è –°—É–¥—å–±–∞ —É–±–µ—Ä–µ–≥–ª–∞ —Ç–µ–±—è –æ—Ç –≥–∏–±–µ–ª–∏ (–æ—Å—Ç–∞–ª–∞—Å—å 1 –∂–∏–∑–Ω—å).")
            if hasattr(s, "yrden_turns") and s.yrden_turns > 0 and action != "yrden":
                s.yrden_turns -= 1

            # —Ç–∏–∫ —è–¥–∞ –≤ –∫–æ–Ω—Ü–µ —Ö–æ–¥–∞
            if hasattr(s, "poison_turns") and s.poison_turns > 0:
                s.hp = max(0, s.hp - 1)
                s.poison_turns -= 1
                log.append("‚ò†Ô∏è –Ø–¥ –≥–ª–æ–∂–µ—Ç —Ç–µ–±—è: ‚àí1 HP.")

            await send_photo(chat_id, img, caption + "\n\n" + "\n".join(log), markup)

            # –ø–æ—Ä–∞–∂–µ–Ω–∏–µ?
            if s.hp <= 0:
                s.finished = True
                await send_text(chat_id, "üíÄ –ñ–∏–∑–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ù–∞–∂–º–∏ ¬´–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ¬ª.")
                s.combat = None
                await show_location(chat_id, s, "finale")
            return {"ok": True}

        # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        await send_text(chat_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
        return {"ok": True}

    return {"ok": True}
